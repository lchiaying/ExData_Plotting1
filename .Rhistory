pnorm(0,.04^2,.06579)
pnorm(0,1,2)
pnorm(2,0,1)
pnorm(.06579,0,.04)
pnorm(qnorm(0.95,0,.04), .01, .04, lower.tail=FALSE)
qnorm(0.95,0,.04)
qnorm(0.95,0,.04, lower.tail=TRUE)
qnorm(0.95,0,.04, lower.tail=FALSE)
pnorm(qnorm(0.95,0,.004), .01, .004, lower.tail=FALSE)
N<-120
sig<-.04/sqrt(120)
pnorm(qnorm(0.95,0,sig), .01, sig, lower.tail=FALSE)
sig<-.04/sqrt(140)
pnorm(qnorm(0.95,0,sig), .01, sig, lower.tail=FALSE)
sig<-.04/sqrt(160)
pnorm(qnorm(0.95,0,sig), .01, sig, lower.tail=FALSE)
ppois(10,17.87)
coins <- c(1,5,10,25,50)
foo <- function(n) {
if (n <= 0) {return 0}
else if (n==1) {return 1}
return sum(lapply(n-coins, foo))
}
source('D:/DataIncubator/test_script.R')
source('D:/DataIncubator/test_script.R')
source('D:/DataIncubator/test_script.R')
source('D:/DataIncubator/test_script.R')
foo(3)
x<-foo(3)
source('D:/DataIncubator/test_script.R')
foo(3)
source('D:/DataIncubator/test_script.R')
source('D:/DataIncubator/test_script.R')
foo(5)
lapply(coins,foo)
foo(coins)
50-coins
apply(coins,foo)
foo(coins[5])
source('D:/DataIncubator/test_script.R')
apply(coins,foo)
source('D:/DataIncubator/test_script.R')
apply(coins,foo)
apply(coins,1,foo)
length(coins)
dim(coins)
source('D:/DataIncubator/test_script.R')
foo(50)
foo(1)
foo(5)
foo(10)
source('D:/DataIncubator/test_script.R')
foo(5)
foo(10)
exp(-0.2)
exp(-0.4)
pnorm(1)
pnorm(1, lower.tail=FALSE)
1-2*pnorm(1, lower.tail=FALSE)
install.packages('kknn')
tmesh <- seq(0,1,by=.01)
hp <- function(p) {log(p/(1-p))}
Ip<- function(t,p) {.5*(t(log(t/p) + (1-t)log((1-t)/(1-p)))) }
Ip<- function(t,p) {.5*(t*(log(t/p) + (1-t)*log((1-t)/(1-p)))) }
G <- function(t,p) { t^2*Ip(1,p) + (1-t^2)*Ip(0,p) - Ip(t,p) + .5*(hp(t)-hp(p))*(t^2-t)}
?uniroot
Gcurve<- rep(0, length(tmesh));
for (i in 1:length(tmesh)) { Gcurve[i] <- uniroot(function(p) G(tmesh[i],p), upper=1, lower=0)}
uniroot(function(x), x^3, upper=1, lower=-1)
uniroot(function(x) x^3, upper=1, lower=-1)
Gcurve<- rep(0, length(tmesh));
for (i in 1:length(tmesh)) { Gcurve[i] <- uniroot(function(p) G(tmesh[i],p), upper=1, lower=0)$root}
G(tmesh[1],0)
Gcurve<- rep(0, length(tmesh));
for (i in 2:length(tmesh)) { Gcurve[i] <- uniroot(function(p) G(tmesh[i],p), upper=1, lower=0)$root}
G(.2,.2)
G(.2,.1)
G
Ip(1,.2)
Ip
Ip(.5,.5)
Ip(.5,.7)
Ip(.5,.3)
plot(tmesh,Ip(tmesh,p))
plot(tmesh,Ip(tmesh,.1))
Ip(0,0)
log(1/0)
Gcurve<- rep(0, length(tmesh));
for (i in 2:length(tmesh)) { Gcurve[i] <- uniroot(function(p) G(tmesh[i],p), upper=tmesh[i], lower=0)$root}
Gcurve<- rep(0, length(tmesh));
for (i in 2:length(tmesh)) { Gcurve[i] <- uniroot(G, t=tmesh[i],upper=tmesh[i], lower=0)$root}
i <- 50
tmesh[i]
G(tmesh[i],.2)
G
hp(tmesh[i])
hp(.2)
Ip(tmesh[i],.2)
Ip(0,p)
Ip(0,.2)
Ip(1,.2)
Ip
G <- function(t,p) { -t^2*log(p) - (1-t^2)*log(1-p) - Ip(t,p) + .5*(hp(t)-hp(p))*(t^2-t)}
Gcurve<- rep(0, length(tmesh));
for (i in 1:length(tmesh)) { Gcurve[i] <- uniroot(G, t=tmesh[i],upper=tmesh[i], lower=0)$root}
Gcurve<- rep(0, length(tmesh));
for (i in 2:length(tmesh)) { Gcurve[i] <- uniroot(G, t=tmesh[i],upper=tmesh[i], lower=0)$root}
Gcurve<- rep(0, length(tmesh));
for (i in 2:length(tmesh)) { Gcurve[i] <- uniroot(function(p) G(tmesh[i],p),upper=tmesh[i], lower=0)$root}
i
G(.01,0)
Gcurve<- rep(0, length(tmesh));
for (i in 2:length(tmesh)) { Gcurve[i] <- uniroot(function(p) G(tmesh[i],p),upper=tmesh[i], lower=0.01)$root}
tmesh[2]
Gcurve<- rep(0, length(tmesh));
for (i in 2:length(tmesh)) { Gcurve[i] <- uniroot(function(p) G(tmesh[i],p),upper=tmesh[i], lower=0.0101)$root}
Gcurve<- rep(0, length(tmesh));
for (i in 2:length(tmesh)) { Gcurve[i] <- uniroot(function(p) G(tmesh[i],p),upper=tmesh[i], lower=0.005)$root}
i
plot(Gcurve)
plot(tmesh,Gcurve)
G
Ip
hp
Ip <- function(t,p) {.5*( t*log(t/p) + (1-t)*log((1-t) / (1-p)) ) }
Gcurve<- rep(0, length(tmesh));
for (i in 2:length(tmesh)) { Gcurve[i] <- uniroot(function(p) G(tmesh[i],p),upper=tmesh[i], lower=0.005)$root}
i
G <- function(t,p) { -t^2*log(p) - (1-t^2)*log(1-p) - Ip(t,p) + .5*(hp(t)-hp(p))*(t^2-t)}
Gcurve<- rep(0, length(tmesh));
for (i in 2:length(tmesh)) { Gcurve[i] <- uniroot(function(p) G(tmesh[i],p),upper=tmesh[i], lower=0.005)$root}
i
Gcurve<- rep(0, length(tmesh));
for (i in 5:length(tmesh)) { Gcurve[i] <- uniroot(function(p) G(tmesh[i],p),upper=tmesh[i], lower=0.005)$root}
i
plot(tmesh,Gcurve)
Gcurve<- rep(0, length(tmesh));
for (i in 5:length(tmesh)) { Gcurve[i] <- uniroot(G, t=tmesh[i], upper=tmesh[i], lower=0.005)$root}
i
Ip
pmesh <- seq(0,1,by=.01)
plot(pmesh,G(.2,pmesh))
plot(pmesh,G(.5,pmesh))
G
G <- function(t,p) { -t^2*log(p)/2 - (1-t^2)*log(1-p)/2 - Ip(t,p) + .5*(hp(t)-hp(p))*(t^2-t)}
Gcurve<- rep(0, length(tmesh));
for (i in 5:length(tmesh)) { Gcurve[i] <- uniroot(G, t=tmesh[i], upper=tmesh[i], lower=0.005)$root}
i
plot(Gcurve,tmesh)
library(diffusionMap)
library(doSNOW)
install.packages('doSNOW')
install.packages('cclust')
library(rgl)
?movie3d
open3d()
plot3d( cube3d(col='red'))
M <- par3d('userMatrix')
detach("package:diffusionMap", unload=TRUE)
1.04*1.03
(5 + c(-1,1) * sqrt(25+40*12))/24
sqrt((5 + sqrt(25+40*12))/24)-1
librarty(devtools)
library(devtools)
find_rtools(TRUE)
R.version()
R.Version()
library(devtools)
update.packages(checkBuilt=TRUE, ask=FALSE)
library(devtools)
find_rtools(TRUE)
library(Rcpp)
Rcpp::sourceCpp('R/test_cpp.cpp')
Rcpp::sourceCpp('R/test_cpp.cpp')
library(devtools)
find_rtools(TRUE)
Rcpp::sourceCpp('R/test_cpp.cpp')
Rcpp::sourceCpp('R/test_cpp.cpp')
Rcpp::sourceCpp('R/test_cpp.cpp')
path()
library(devtools)
build()
devtools::build()
exit
quit
quit()
library(devtools)
find_rtools(TRUE)
library(Rcpp)
sourceCpp("R/test_cpp.cpp")
Rcpp::sourceCpp('R/test_cpp.cpp')
library("SymmetricMatrix", lib.loc="C:/Users/Chia Ying/Documents/R/win-library/3.2")
detach("package:SymmetricMatrix", unload=TRUE)
Rcpp::sourceCpp('R/test.cpp')
library(RcppArmadillo)
library(Rcpp)
Rcpp::sourceCpp("R/test.cpp")
1e4 * 3e3 * 8 / 1e6
1e4 * 3e3 * 8 / 1e9
6/3e3
1.03^10*675
1.05^10*675
1.05^12*675
library(datasets)
View(iris)
plot(iris)
plot(c(0,10),c(0,10))
dev.off()
dev.off()
plot(c(0,10),c(0,10))
plot(iris)
summary(iris$Species)
levels(iris$Species)
as.integer(iris$Species)
plot(iris[,-5], col=iris$Species)
plot(iris[,-5], col=iris$Species, pch = 19)
plot(iris[,-5], col=iris$Species, pch = 4)
plot(iris[,-5], col=iris$Species, pch = 2)
plot(iris[,-5], col=iris$Species, pch = 3)
plot(iris[,-5], col=iris$Species, pch = iris$Species)
plot(iris[,-5], col=iris$Species, pch = as.integer(iris$Species))
plot(iris[,-5], col=iris$Species)
legend(x="bottomright", legend=paste("Species", 1:3), col=1:3, pch=1)
plot(iris[,-5], col=iris$Species)
legend(x="bottomright", legend=paste("Species", 1:3), col=1:3, pch=1)
plot(iris[,-5], col=iris$Species)
legend(x="bottomright", legend=paste("Species", 1:3), col=1:3, pch=1, cex=.3)
legend(x="bottomright", legend=paste("Species", 1:3), col=1:3, pch=1, cex=.5)
legend(x="bottomright", legend=paste("Species", 1:3), col=1:3, pch=1, cex=1)
library(rgl)
plot3d(iris[,1:3], col=iris$Species)
plot3d(iris[,1:3], col=as.integer(iris$Species))
summary(filter(iris, Species == "setosa"))
summary(dplyr::filter(iris, Species == "setosa"))
library(ggplot2)
exit
quit()
library(ggplot2)
library(shiny)
?geom_point
exit
quit
quit()
author:
author:
source('~/.active-rstudio-document', echo=TRUE)
iris
HairEyeColor
AirPassengers
Titanic
ToothGrowth
head(ToothGrowth)
head(PlantGrowth)
head(ChickWeight)
head(Orange)
head(OrchardSprays)
head(WWWusage)
head(VADeaths)
ls(envir=datasets)
ls(envir=package:datasets)
ls(envir="package:datasets")
ls(envir="datasets")
head(state.abb)
head(state.area)
head(state.center)
head(state.division)
head(state.name)
head(sunspot.month)
head(sunspots)
head(UCBAdmissions)
head(InsectSprays)
head(VADeaths)
dim(Orange)
?Orange
head(OrchardSprays )
PlantGrowth
library(data.table)
orange <- as.data.table(Orange)
orange[, max(age), by=Tree]
Orange$circumference[4]
Orange[4, "circumference"]
Orange[Orange$age==1582, "circumference"]
y <- list("orange", 3.14, x)
x <- 5
y <- list("orange", 3.14, x)
z <- 1:10
z
print(x)
print(y)
sqrt(x) - 1
sqrt(x) * 2 - 1
x - 2 * sqrt(x)
class(Orange$Tree)
rm(x,y,z)
z[1]
z <- list("orange", x, pi, y)
x <- 5L
y <- c(1,3,5)
z <- list("orange", x, pi, y)
z[3]
class(z[3])
print(y)
print(z)
y[c(1,3)]
a[4:6]
(a <- 3:8)
75*100/6
75*100/6/12
6*12
library(curl)
library(ggplot2)
library(datasets)
dim(Orange)
Orange
ggplot(Orange) + geom_line() + geom_point()
ggplot(Orange, aes(x=age, y=circumference, color=factor(Tree)))
ggplot(Orange, aes(x=age, y=circumference, color=factor(Tree))) + geom_line() + geom_point()
?theme
ggplot(Orange, aes(x=age, y=circumference, color=factor(Tree))) + geom_line() + geom_point() + theme(text=element_text(size=20))
ggplot(Orange, aes(x=age, y=circumference, color=factor(Tree))) + geom_line() + geom_point() + theme(text=element_text(size=50))
ggplot(Orange, aes(x=age, y=circumference, color=factor(Tree))) + geom_line() + geom_point() + theme(text=element_text(size=20))
ggplot(Orange, aes(x=age, y=circumference, color=factor(Tree))) + geom_line() + geom_point() + theme(text=element_text(size=20), line=element_line(size=10))
ggplot(Orange, aes(x=age, y=circumference, color=factor(Tree))) + geom_line() + geom_point() + theme(text=element_text(size=20), line=element_line(size=50))
ggplot(Orange, aes(x=age, y=circumference, color=factor(Tree))) + geom_line() + geom_point() + theme(line=element_line(size=.1), text=element_text(size=20))
ggplot(Orange, aes(x=age, y=circumference, color=factor(Tree))) + geom_line() + geom_point() + theme(line=element_line(size=5), text=element_text(size=20))
?geom_point
ggplot(Orange, aes(x=age, y=circumference, color=factor(Tree))) + geom_line(size=10) + geom_point() + theme(line=element_line(size=5), text=element_text(size=20))
ggplot(Orange, aes(x=age, y=circumference, color=factor(Tree))) + geom_line(size=1) + geom_point() + theme(line=element_line(size=5), text=element_text(size=20))
ggplot(Orange, aes(x=age, y=circumference, color=factor(Tree))) + geom_line(size=5) + geom_point() + theme(text = element_text(size=50))
ggplot(Orange, aes(x=age, y=circumference, color=factor(Tree))) + geom_line(size=5) + geom_point() + theme(text = element_text(size=50), legend.key=element_rect(size=50))
ggplot(Orange, aes(x=age, y=circumference, color=factor(Tree))) + geom_line(size=5) + geom_point() + theme(text = element_text(size=50), legend.key.width=unit(50, units="lines"))
library(c(ggplot2, grid))
library(grid)
ggplot(Orange, aes(x=age, y=circumference, color=factor(Tree))) + geom_line(size=5) + geom_point() + theme(text = element_text(size=50), legend.key.width=unit(50, units="lines"))
ggplot(Orange, aes(x=age, y=circumference, color=factor(Tree))) + geom_line(size=5) + geom_point() + theme(text = element_text(size=50), legend.key.width=unit(1, units="lines"))
ggplot(Orange, aes(x=age, y=circumference, color=factor(Tree))) + geom_line(size=1) + geom_point() + theme(text = element_text(size=50), legend.key.width=unit(1, units="lines"))
ggplot(Orange, aes(x=age, y=circumference, color=factor(Tree))) + geom_line(size=1) + geom_point() + theme(text = element_text(size=50), legend.key.width=unit(3, units="lines"))
dplyr::filter(Orange, age==1582)
Orange %<% dplyr::filter(age==1582)
Orange %>% dplyr::filter(age==1582)
library(dplyr)
Orange %>% dplyr::filter(age==1582)
Orange %<% dplyr::filter(age==1582)
means(.Last.value$circumference)
mean(.Last.value$circumference)
colnames(Orange)
names(Orange)
class(Orange$age)
class(Orange$Tree)
class(Orange$circumference)
Orange$age
library(datasets)
head(Orange, 9)
attr(Orange)
df <- Orange
attr(Orange, "labels")
factor(Orange$circumference)
factor(Orange$Tree)
Orange$Tree
as.integer(Orange$Tree)
merge?
?merge
?dplyr::mutate
mutate(mtcars, displ_l = disp / 61.0237)
dplyr::mutate(mtcars, displ_l = disp / 61.0237)
dplyr::transmute(mtcars, displ_l = disp / 61.0237)
1.05^20
18.25-15.50
2.75*43
13/4*5
18.25+9.75
18.25/15.50
15.50*6
18.25*5
15/13
20.25/17.50
1187.23/218/65
1187.23/218.65
218.65*5
library(KernSmooth)
install.packages("KernSmooth")
install.packages("KernSmooth")
library(KernSmooth)
5.3/8
blah <- "749067a3d1f1f07051b0af676aee35c97c097011"
blah1 <- "749067a3d1f1f07051b0af676aee35c97c097011"
blah==blah1
"cd812ca5e76a3614c5e39aaba52c26aa61f2953a" == "cd812ca5e76a3614c5e39aaba52c26aa61f2953a"
"b950ffdfdff5ba561d2be70b0adecad00793f7ed" == "b950ffdfdff5ba561d2be70b0adecad00793f7ed"
"7151b7424d1b8849e716b85ac2e403a3806a2af8" == "7151b7424d1b8849e716b85ac2e403a3806a2af8"
setwd("D:/Coursera/DataScienceSpecialization/Course4/Project1/")
library(data.table)
consumption <- fread("household_power_consumption.txt")
hist(consumption$Global_active_power,
col = 1,
xlab = "Global Active Power (kilowatts)",
main = "Global Active Power")
consumption <- fread("household_power_consumption.txt", na.strings="?")
consumption <- fread("household_power_consumption.txt", na.strings='?')
consumption <- fread("household_power_consumption.txt", na.strings=c("", "?"))
names(consumption)
consumption <- fread("household_power_consumption.txt",
na.strings=c("", "?"),
colClasses=c(rep("character", 2), rep("numeric", 7)))
consumption <- read.csv("household_power_consumption.txt",
na.strings=c("", "?")
)
sapply(consumption, class)
sapply(as.list(consumption), class)
consumption <- read.table("household_power_consumption.txt", sep=";",
na.strings=c("", "?"),
colClasses=c(rep("character", 2), rep("numeric", 7)))
consumption <- read.table("household_power_consumption.txt",
sep=";"
)
sapply(as.list(consumption), class)
head(consumption)
consumption <- read.table("household_power_consumption.txt",
sep=";", header=T
)
sapply(as.list(consumption), class)
consumption <- read.table("household_power_consumption.txt",
sep=";", header=T,
na.strings=c("", "?")
)
sapply(as.list(consumption), class)
consumption <- fread("household_power_consumption.txt",
sep=";", header=T,
na.strings=c("", "?")
)
consumption <- read.table("household_power_consumption.txt",
sep=";",
header=T,
na.strings=c("", "?"))
sapply(as.list(consumption), class)
sum(is.na(consumption$Global_active_power))
dim(consumption)
consumption1 <- consumption
consumption <- as.data.table(consumption)
consumption[, Date := as.Date(consumption$Date)]
class(consumption$Date)
consumption
?as.Date
consumption <- as.data.table(consumption1)
consumption[, Date := as.Date(consumption$Date, format="%m/%d/%Y")]
head(consumption$Date)
consumption <- as.data.table(consumption1)
head(consumption$Date)
consumption[, Date := as.Date(as.character(Date), format="%m/%d/%Y")]
head(consumption$Date)
as.character(consumption$Date[1])
(consumption$Date[1])
consumption <- as.data.table(consumption1)
consumption[, Date := as.Date(as.character(Date), format="%m/%d/%Y")]
(consumption$Date[1])
consumption <- as.data.table(consumption1)
(consumption$Date[1])
as.character(consumption$Date[1])
consumption[, Date := as.Date(as.character(Date), format="%d/%m/%Y")]
(consumption$Date[1])
consumption <- consumption[Date >= as.Date("2007-02-01") |
Date <= as.Date("2007-02-02")]
dim(consumption)
consumption[, .(Date)]
consumption$Date >= as.Date("2007-02-01")
consumption$Date[1] >= as.Date("2007-02-01")
consumption <- consumption[Date >= as.Date("2007-02-01") &
Date <= as.Date("2007-02-02")]
dim(consumption)
source("Project1.R")
hist(consumption$Global_active_power,
col = 1,
xlab = "Global Active Power (kilowatts)",
main = "Global Active Power")
hist(consumption$Global_active_power,
col = 1,
xlab = "Global Active Power (kilowatts)",
main = "Global Active Power")
hist(consumption$Global_active_power,
col = 2,
xlab = "Global Active Power (kilowatts)",
main = "Global Active Power")
png("plot1.png", height=480, width=480)
hist(consumption$Global_active_power,
col = 2,
xlab = "Global Active Power (kilowatts)",
main = "Global Active Power")
dev.off()
consumption
strptime(paste0(consumption[1,.(Date, Time)]))
paste0(consumption[1,.(Date, Time)])
(consumption[1,.(Date, Time)])
(consumption[1,.(paste(Date, Time))])
strptime(consumption[1,.(paste(Date, Time))])
strptime(consumption[1,.(paste(Date, Time))],
format="%Y-%m-%d %H:%m:%s")
strptime(consumption[1,.(paste(Date, Time))],
format="%Y-%m-%d %H:%M:%S")
strptime(consumption[2,.(paste(Date, Time))],
format="%Y-%m-%d %H:%M:%S")
consumption[, DateTime := strptime(paste(Date, Time))]
consumption[, DateTime := strptime(paste(Date, Time), format="%Y-%m-%d %H:%M:%S")]
consumption <- read.table("household_power_consumption.txt",
sep=";",
header=T,
na.strings=c("", "?"))
consumption1 <- consumption
consumption <- as.data.table(consumption)
consumption[, Date := as.Date(as.character(Date), format="%d/%m/%Y")]
consumption[, Timestamp := strptime(paste(Date, Time), format="%Y-%m-%d %H:%M:%S")]
names(consumption)
consumption[, Timestamp := NULL]
